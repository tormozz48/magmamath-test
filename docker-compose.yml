version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: users_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network

  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network

  # User service
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://root:password@mongodb:27017/users_db?authSource=admin
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - app_network

  # Notification service
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile.notification
    container_name: notification-service
    restart: always
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=development
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - rabbitmq
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mongodb_data:
  rabbitmq_data:
